- name: Load public ips
  import_playbook: load-public-ips.yaml

- hosts: prod
  tasks:
    - name: Install k3s
      block:
        - ansible.builtin.set_fact:
            k3s_release_version: stable
            k3s_become: yes
            k3s_state: installed
            k3s_control_node: "{{ is_k8s_master }}"
            k3s_server:
              flannel-backend: none
              disable-network-policy: true
              disable-kube-proxy: true
              disable-helm-controller: true
              disable:
                - servicelb
                - traefik
                - local-storage
#                - metrics-server
              node-ip: "{{ ansible_default_ipv4.address }}"
              advertise-address: "{{ ansible_default_ipv4.address }}"
              node-external-ip:
                - "{{ public_ip }}"
                - "{{ wireguard_ip }}"
              kubelet-arg:
                - "image-gc-high-threshold=60"
                - "image-gc-low-threshold=40"
              node-label: "{{ k8s_node_labels }}"
              tls-san:
                - "{{ inventory_hostname }}"
        - ansible.builtin.import_role:
            name: xanmanning.k3s

    - name: Install cilium
      become: yes
      run_once: yes
      kubernetes.core.helm:
        atomic: yes
        chart_ref: cilium
        chart_repo_url: https://helm.cilium.io/
        create_namespace: yes
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        release_name: cilium
        release_namespace: kube-system
        values:
          kubeconfig: /etc/rancher/k3s/k3s.yaml
          k8sServiceHost: 127.0.0.1
          k8sServicePort: 6443
          resources:
            limits:
              cpu: 4000m
              memory: 4Gi
            requests:
              cpu: 50m
              memory: 512Mi
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 1
          rollOutCiliumPods: true
          bpf:
            clockProbe: true
            preallocateMaps: true
            lbExternalClusterIP: true
            masquerade: true
            waitForKubeProxy: true
#          devices: "{{ ansible_default_ipv4.interface }}"
          hubble:
            relay:
              enabled: true
              rollOutPods: true
              resources:
                limits:
                  cpu: 100m
                  memory: 64Mi
                requests:
                  cpu: 5m
                  memory: 16Mi
            ui:
              enabled: true
              rollOutPods: true
              backend:
                resources:
                  limits:
                    cpu: 100m
                    memory: 64Mi
                  requests:
                    cpu: 5m
                    memory: 16Mi
              frontend:
                resources:
                  limits:
                    cpu: 100m
                    memory: 64Mi
                  requests:
                    cpu: 5m
                    memory: 16Mi
          ipam:
            mode: kubernetes
          k8s:
            requireIPv4PodCIDR: true
          kubeProxyReplacement: strict
          loadBalancer:
            algorithm: maglev
#            serviceTopology: true
          operator:
            rollOutPods: true
            replicas: 1
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 5m
                memory: 32Mi
          nodeinit:
            enabled: true
            resources:
              requests:
                cpu: 5m
                memory: 1Mi
              limits:
                cpu: 100m
                memory: 16Mi
        wait: yes

    - name: Create and download kubeconfig
      block:
        - ansible.builtin.set_fact:
            kubeconfig_path: /etc/rancher/k3s/k3s.yaml
            api_server_host: k8s.homelab.bhyoo.com:6443
            cluster_name: "homelab-prod"
            local_directory: _kubeconfig
            local_kubeconfig_prefix: prod-
            cluster_admins:
              - bhyoo-phone
              - bhyoo-desktop
              - bhyoo-office
            namespaced_admins:
              daily-receipt:
                - woo
              zello-draw:
                - kjh
                - ldj
          when: is_k8s_master

        - ansible.builtin.include_role:
            name: kubeconfig
            apply:
              become: yes
          when: is_k8s_master

- hosts: backbone
  tasks:
    - name: Install k3s
      block:
        - ansible.builtin.set_fact:
            k3s_release_version: stable
            k3s_become: yes
            k3s_state: installed
            k3s_control_node: "{{ is_k8s_master }}"
            k3s_server:
              flannel-backend: 'host-gw'  # This needs to be in quotes
              disable-helm-controller: true
              disable:
                - traefik
                - servicelb
              advertise-address: "{{ desired_ip }}"
              node-external-ip: "{{ wireguard_ip }}"
              kubelet-arg:
                - "image-gc-high-threshold=60"
                - "image-gc-low-threshold=40"
              node-label: "{{ k8s_node_labels }}"
            k3s_agent:
              node-external-ip: "{{ wireguard_ip }}"
              kubelet-arg:
                - "image-gc-high-threshold=60"
                - "image-gc-low-threshold=40"
              node-label: "{{ k8s_node_labels }}"
        - ansible.builtin.import_role:
            name: xanmanning.k3s

    - name: Create and download kubeconfig
      block:
        - ansible.builtin.set_fact:
            kubeconfig_path: /etc/rancher/k3s/k3s.yaml
            api_server_host: "{{ wireguard_ip }}:6443"
            cluster_name: "homelab-backbone"
            local_directory: _kubeconfig
            local_kubeconfig_prefix: backbone-
            cluster_admins:
              - bhyoo-phone
              - bhyoo-desktop
          when: is_k8s_master

        - ansible.builtin.include_role:
            name: kubeconfig
            apply:
              become: yes
          when: is_k8s_master
