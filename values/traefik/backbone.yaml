deployment:
  # Can be either Deployment or DaemonSet
  kind: DaemonSet

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Create a default IngressClass for Traefik
ingressClass:
  enabled: true
  isDefaultClass: true

#
# Configure providers
#
providers:
  kubernetesIngress:
    ingressClass: traefik
    publishedService:
      enabled: true

## Logs
## https://docs.traefik.io/observability/logs/
logs:
  ## Traefik logs concern everything that happens to Traefik itself (startup, configuration, events, shutdown, and so on).
  general:
    # By default, the logs use a text format (common), but you can
    # also ask for the json format in the format option
    # format: json
    # By default, the level is set to ERROR.
    # Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
    level: WARN
  access:
    # To enable access logs
    enabled: true
    # By default, logs are written using the Common Log Format (CLF).
    # To write logs in JSON, use json in the format option.
    # If the given format is unsupported, the default (CLF) is used instead.
    format: json
    fields:
      headers:
        defaultmode: keep

metrics:
  ## Prometheus is enabled by default.
  ## It can be disabled by setting "prometheus: null"
  prometheus:
    ## Entry point used to expose metrics.
    entryPoint: metrics
    ## Enable metrics on entry points. Default=true
    # addEntryPointsLabels: false
    ## Enable metrics on routers. Default=false
    # addRoutersLabels: true
    ## Enable metrics on services. Default=true
    # addServicesLabels: false
    ## Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
    # buckets: "0.5,1.0,2.5"
    ## When manualRouting is true, it disables the default internal router in
    ## order to allow creating a custom router for prometheus@internal service.
    # manualRouting: true

globalArguments: []

#
# Configure Traefik static configuration
# Additional arguments to be passed at Traefik's binary
# All available options available on https://docs.traefik.io/reference/static-configuration/cli/
## Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
additionalArguments:
  - --api.dashboard=false


# Configure ports
ports:
  # The name of this one can't be changed as it is used for the readiness and
  # liveness probes, but you can adjust its config to your liking
  web: null
  websecure:
    ## Enable this entrypoint as a default entrypoint. When a service doesn't explicity set an entrypoint it will only use this entrypoint.
    # asDefault: true
    #
    ## Enable HTTP/3 on the entrypoint
    ## Enabling it will also enable http3 experimental feature
    ## https://doc.traefik.io/traefik/routing/entrypoints/#http3
    ## There are known limitations when trying to listen on same ports for
    ## TCP & UDP (Http3). There is a workaround in this chart using dual Service.
    ## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741
    http3:
      enabled: true

    #
    # Trust forwarded  headers information (X-Forwarded-*).
    forwardedHeaders:
      insecure: true

    # -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#transport)
    transport:
      respondingTimeouts:
        readTimeout: 900s

rollingUpdate:
  maxUnavailable: 0
  maxSurge: 1

# Options for the main traefik service, where the entrypoints traffic comes
# from.
service:
  ## Single service is using `MixedProtocolLBService` feature gate.
  ## When set to false, it will create two Service, one for TCP and one for UDP.
  single: true
  spec:
    externalTrafficPolicy: Local


resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 300m
    memory: 256Mi

nodeSelector:
  homelab.bhyoo.com/vpn-gateway: 'true'

# Pods can have priority.
# Priority indicates the importance of a Pod relative to other Pods.
priorityClassName: "system-cluster-critical"
